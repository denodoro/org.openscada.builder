<?xml version="1.0" encoding="UTF-8"?>
<project name="openscada.build.profile">
	<echo message="Profile: Jenkins CI" />
	
	<property environment="env"/>
	
	<property name="eclipse.home.dir" location="${env.ECLIPSE_371_HOME}"/>
	
	<property name="build.root" location="../.."/>
	
	<property name="output.dir" location="${env.WORKSPACE}/output"/>
	<property name="input.dir" location="${env.WORKSPACE}/input"/>
	
	<!-- load properties last, since they don't override in ant -->
	<property file="${build.root}/global.properties"/>
	<property file="${build.root}/global/global.properties"/>
	
	<import file="${build.root}/global/tasks.ant"/>
	
	<!-- ================================= 
          target: setup
         ================================= -->
    <target name="setup" unless="skip.setup">
    	
    	<delete dir="${input.dir}" failonerror="false"/>
		<mkdir dir="${input.dir}"/>
    	<mkdir dir="${input.dir}/repos"/>
    	
    	<getP2Repo required="${require.external}" jobname="org.openscada.external-0.18" reponame="org.openscada.external.sdk" version="${external.version}"/>
    	<getP2Repo required="${require.aurora}" jobname="org.openscada.aurora-0.18" reponame="org.openscada.aurora.sdk" version="${aurora.version}"/>
    	<getP2Repo required="${require.oxygen}" jobname="org.openscada.oxygen-0.18" reponame="org.openscada.oxygen.sdk" version="${oxygen.version}"/>
		<getP2Repo required="${require.utgard}" jobname="org.openscada.utgard-0.18" reponame="org.openscada.utgard.sdk" version="${utgard.version}"/>
    	<getP2Repo required="${require.atlantis}" jobname="org.openscada.atlantis-0.18" reponame="org.openscada.atlantis.sdk" version="${atlantis.version}"/>
		<getP2Repo required="${require.orilla}" jobname="org.openscada.orilla-0.18" reponame="org.openscada.orilla.sdk" version="${orilla.version}"/>
		<getP2Repo required="${require.dakara}" jobname="org.openscada.dakara-0.18" reponame="org.openscada.dakara.sdk" version="${dakara.version}"/>
    	<getP2Repo required="${require.deploy}" jobname="org.openscada.deploy-0.18" reponame="org.openscada.deploy.repo" version="${deploy.version}"/>
    	
    	<downloadP2Repo required="${require.external.gef}" uri="http://download.openscada.org/mirror/GEF-Update-3.7.0.zip"/>
    	<downloadP2Repo required="${require.external.emf}" uri="http://download.openscada.org/mirror/emf-xsd-Update-2.7.0.zip"/>
		<downloadP2Repo required="${require.external.rcp}" uri="http://download.openscada.org/mirror/org.eclipse.rcp-3.7.zip"/>
		<downloadP2Repo required="${require.external.platform}" uri="http://download.openscada.org/mirror/org.eclipse.platform-3.7.zip"/>
    	<downloadP2Repo required="${require.external.ecf}" uri="http://download.openscada.org/mirror/org.eclipse.ecf.sdk_3.2.0.v20100219-1253.zip"/>
		<downloadP2Repo required="${require.external.equinox}" uri="http://download.openscada.org/mirror/equinox-SDK-3.7.zip"/>
		<downloadP2Repo required="${require.external.albireo}" uri="http://download.openscada.org/mirror/org.eclipse.albireo.rcp_v20081031.zip"/>
    	<downloadP2Repo required="${require.external.babel}" uri="http://download.openscada.org/mirror/BabelLanguagePack-eclipse-de_3.6.0.v20100814043401.zip"/>

    </target>
	
	<!-- = = = = = = = = = = = = = = = = =
          macrodef: downloadP2Repo          
         = = = = = = = = = = = = = = = = = -->
    <macrodef name="downloadP2Repo">
    	<attribute name="required" />
    	<attribute name="uri"/>
        <sequential>
        	<if>
        		<equals arg1="@{required}" arg2="true"/>
        		<then>
        			<echo message="Importing external P2 Repository from: @{uri}"/>
			    	<get dest="${input.dir}/repos" src="@{uri}" usetimestamp="true"/>
        		</then>
        	</if>
        </sequential>
    </macrodef>

	
	<!-- = = = = = = = = = = = = = = = = =
          macrodef: getP2Repo          
         = = = = = = = = = = = = = = = = = -->
    <macrodef name="getP2Repo">
        <attribute name="repoName" />
    	<attribute name="version" />
    	<attribute name="jobName" default="@{repoName}-@{version}" />
    	<attribute name="required" />
        <sequential>
        	<if>
        		<equals arg1="@{required}" arg2="true"/>
        		<then>
        			<echo message="Importing P2 Repository from: ${env.JENKINS_URL}/job/@{jobName}/lastSuccessfulBuild/artifact/output/@{repoName}-@{version}-p2repo.zip"/>
			    	<get dest="${input.dir}/repos" src="${env.JENKINS_URL}/job/@{jobName}/lastSuccessfulBuild/artifact/output/@{repoName}-@{version}-p2repo.zip" usetimestamp="true"/>
        		</then>
        	</if>
        </sequential>
    </macrodef>

</project>
