<?xml version="1.0" encoding="UTF-8"?>
<!-- ====================================================================== 
     Sep 9, 2009 4:03:30 PM                                                        

     OpenSCADA Builder    
     Library File
                   
     jens                                                                
     ====================================================================== -->
<project name="org.openscada.builder.lib" default="default">
    <description>
            Library File
    </description>

	<property name="build.root" location="../.."/>
	
	<property name="builder.profile" value="local"/>	
	<dirname file="${ant.file.org.openscada.builder.lib}" property="org.openscada.builder.lib.dir"/>
	<import file="${org.openscada.builder.lib.dir}/profile.d/profile.${builder.profile}.ant"/>
	
	<!-- antlib -->
	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
	  <classpath>
	    <pathelement location="${org.openscada.builder.lib.dir}/ant-contrib.jar"/>
	  </classpath>
	</taskdef>
	
	<!-- ================================= 
          target: default              
         ================================= -->
    <target name="default" depends="" description="No Default">
        <fail message="This file is only a task loader"/>
    </target>
	
	<!-- macrodefs -->
	
	<!-- = = = = = = = = = = = = = = = = =
          macrodef: openscada.builder.copyFeature          
         = = = = = = = = = = = = = = = = = -->
    <macrodef name="openscada.builder.copyFeature">
        <attribute name="id" />
    	<attribute name="root" default="${source.root}"/>
    	<attribute name="buildRoot" default="${buildDirectory}"/>
        <sequential>
          	<copy todir="@{buildRoot}/features/@{id}">
          		<fileset dir="@{root}/@{id}.feature" />
        	</copy>
        </sequential>
    </macrodef>

	<!-- = = = = = = = = = = = = = = = = =
          macrodef: openscada.builder.copyPlugin          
         = = = = = = = = = = = = = = = = = -->
    <macrodef name="openscada.builder.copyPlugin">
        <attribute name="id" />
    	<attribute name="root" default="${source.root}"/>
    	<attribute name="buildRoot" default="${buildDirectory}"/>
    	<attribute name="project" default="@{id}"/>
        <sequential>
          	<copy todir="@{buildRoot}/plugins/@{id}">
          		<fileset dir="@{root}/@{project}">
          		</fileset>
        	</copy>
        </sequential>
    </macrodef>
	

	<!-- = = = = = = = = = = = = = = = = =
          macrodef: openscada.bundleBuild          
         = = = = = = = = = = = = = = = = = -->
    <macrodef name="openscada.bundleBuild">
        <attribute name="builder" />
        <sequential>
        	<delete dir="@{builder}/build" failonerror="false"/>
        	<mkdir dir="@{builder}/build" />
        	<java jar="${startup}" failonerror="true" maxmemory="1024m" fork="true" dir="${eclipse.home.dir}/plugins/org.eclipse.pde.build${eclipse.builder.version}/scripts">
	    		<jvmarg value="-XX:MaxPermSize=256m"/>
	    		
				<arg value="-application" />
			    <arg value="org.eclipse.ant.core.antRunner" />
        		
        		<arg value="-buildfile" />
		   		<arg value="${eclipse.home.dir}/plugins/org.eclipse.pde.build${eclipse.builder.version}/scripts/build.xml" />
        		
        		<!--
        		<arg value="-verbose"/>
        		-->
        		
				<arg value="-Dbuilder=${basedir}/@{builder}"/>
        		<arg value="-Dbuild.root=${build.root}"/>
        		<arg value="-Dsource.root=${source.root}"/>
	    		<arg value="-DbaseLocation=${eclipse.home.dir}"/>
				<arg value="-DbuildDirectory=${basedir}/@{builder}/build"/>
        		
        		<arg value="-Ddeploy.repo.root=${deploy.repo.root}"/>
        		<arg value="-Dexternal.repo.root=${external.repo.root}"/>
        		
	        	<syspropertyset>
	        		<propertyref builtin="all"/>
	        	</syspropertyset>
			</java>
        </sequential>
    </macrodef>

	<!-- = = = = = = = = = = = = = = = = =
          macrodef: openscada.productBuild          
         = = = = = = = = = = = = = = = = = -->
    <macrodef name="openscada.productBuild">
        <attribute name="builder" />
        <sequential>
        	<delete dir="@{builder}/build" failonerror="false"/>
        	<mkdir dir="@{builder}/build" />
        	<java jar="${startup}" failonerror="true" maxmemory="1024m" fork="true" dir="${eclipse.home.dir}/plugins/org.eclipse.pde.build${eclipse.builder.version}/scripts">
	    		<jvmarg value="-XX:MaxPermSize=256m"/>
	    		
				<arg value="-application" />
			    <arg value="org.eclipse.ant.core.antRunner" />
        		
		    	<arg value="-buildfile" />
		   		<arg value="${eclipse.home.dir}/plugins/org.eclipse.pde.build${eclipse.builder.version}/scripts/productBuild/productBuild.xml" />
        		
        		<!--
        		<arg value="-verbose"/>
        		-->
        		
				<arg value="-Dbuilder=${basedir}/@{builder}"/>
        		<arg value="-Dbuild.root=${build.root}"/>
        		<arg value="-Dsource.root=${source.root}"/>
	    		<arg value="-DbaseLocation=${eclipse.home.dir}"/>
				<arg value="-DbuildDirectory=${basedir}/@{builder}/build"/>
        		
        		<arg value="-Ddeploy.repo.root=${deploy.repo.root}"/>
        		<arg value="-Dexternal.repo.root=${external.repo.root}"/>
        		
	        	<syspropertyset>
	        		<propertyref builtin="all"/>
	        	</syspropertyset>
			</java>
        </sequential>
    </macrodef>
	
	<!-- = = = = = = = = = = = = = = = = =
          macrodef: openscada.deploy.repository          
         = = = = = = = = = = = = = = = = = -->
    <macrodef name="openscada.deploy.repository">
        <attribute name="name"/>
        <sequential>
        	<echo message="Publish repository to: ${output.dir}"/>
        	<mkdir dir="${output.dir}"/>
       	  	<copy file="${buildDirectory}/${buildLabel}/@{name}-${buildId}-group.group.group.zip" tofile="${output.dir}/@{name}-${buildId}-p2repo.zip" failonerror="true"/>
        	
        	<!-- make a plain zip file -->
        	<zip destfile="${output.dir}/@{name}-${buildType}.${buildId}.zip">
        		<fileset dir="${buildDirectory}/buildRepo/plugins">
        			<include name="*.jar"/>
        		</fileset>
        	</zip>
        	
        </sequential>
    </macrodef>

	<!-- = = = = = = = = = = = = = = = = =
          macrodef: openscada.importAllRepositories          
         = = = = = = = = = = = = = = = = = -->
    <macrodef name="openscada.importAllRepositories">
        <sequential>
        	<mkdir dir="${repoBaseLocation}"/>
        	<copy todir="${repoBaseLocation}">
        		<fileset dir="${input.dir}/repos"/>
        	</copy>
        </sequential>
    </macrodef>
	
	<!-- = = = = = = = = = = = = = = = = =
          macrodef: openscada.importEclipseArchive          
         = = = = = = = = = = = = = = = = = -->
    <macrodef name="openscada.importEclipseArchive">
        <attribute name="file" />
        <sequential>
        	<echo message="Import external eclipse archive (non-P2): ${external.repo.root}/@{file}"/>
            <unzip src="${external.repo.root}/@{file}" dest="${buildDirectory}">
				<globmapper from="eclipse/*" to="*"/>
        	</unzip>
        </sequential>
    </macrodef>
	
	<!-- = = = = = = = = = = = = = = = = =
          macrodef: openscada.import.externalRepository          
         = = = = = = = = = = = = = = = = = -->
    <macrodef name="openscada.import.externalRepository">
    	<attribute name="file"/>
    	<attribute name="todir" default="${repoBaseLocation}"/>
        <sequential>
        	<echo message="Import external P2 repository: ${input.dir}/repos/@{file}"/>
        	<mkdir dir="${repoBaseLocation}"/>
    		<copy file="${input.dir}/repos/@{file}" todir="${repoBaseLocation}" failonerror="true"/>
        </sequential>
    </macrodef>

	<!-- ================================= 
          target: populateEclipse              
         ================================= -->
    <target name="populateEclipse" depends="" description="Download eclipse stuff">
    	<mkdir dir="${external.repo.root}"/>
    	
    	<parallel threadcount="2">
	        <get usetimestamp="true" src="http://download.openscada.org/mirror/GEF-Update-3.7.0.zip" dest="${external.repo.root}/GEF-Update-3.7.0.zip"/>
	    	<get usetimestamp="true" src="http://download.openscada.org/mirror/emf-xsd-Update-2.7.0.zip" dest="${external.repo.root}/emf-xsd-Update-2.7.0.zip"/>
	    	<get usetimestamp="true" src="http://download.openscada.org/mirror/org.eclipse.rcp-3.7.zip" dest="${external.repo.root}/org.eclipse.rcp-3.7.zip"/>
	    	<get usetimestamp="true" src="http://download.openscada.org/mirror/org.eclipse.platform-3.7.zip" dest="${external.repo.root}/org.eclipse.platform-3.7.zip"/>
    		<get usetimestamp="true" src="http://download.openscada.org/mirror/org.eclipse.ecf.sdk_3.2.0.v20100219-1253.zip" dest="${external.repo.root}/org.eclipse.ecf.sdk_3.2.0.v20100219-1253.zip"/>
	   	   	<get usetimestamp="true" src="http://download.openscada.org/mirror/equinox-SDK-3.7.zip" dest="${external.repo.root}/equinox-SDK-3.7.zip"/>
	    	
	    	<get usetimestamp="true" src="http://download.openscada.org/mirror/org.eclipse.albireo.rcp_v20081031.zip" dest="${external.repo.root}/org.eclipse.albireo.rcp_v20081031.zip"/>
    		<get usetimestamp="true" src="http://download.openscada.org/mirror/BabelLanguagePack-eclipse-de_3.6.0.v20100814043401.zip" dest="${external.repo.root}/BabelLanguagePack-eclipse-de_3.6.0.v20100814043401.zip"/>
		</parallel>

    </target>

	
</project>

